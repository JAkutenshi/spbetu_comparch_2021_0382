Microsoft (R) Macro Assembler Version 5.10                  10/18/21 20:17:1
                                                             Page     1-1


       1				
       2				; Program stack
       3 0000				AStack SEGMENT STACK
       4 0000  000C[			    DW 12 DUP(?)
       5	   ????			
       6			 ]	
       7				
       8 0018				AStack ENDS
       9				
      10				; Program data
      11 0000				DATA SEGMENT
      12 0000  0007			a DW 7
      13 0002  000C			b DW 12
      14 0004  0014			i DW 20
      15 0006  0002			k DW 2
      16 0008  0000			i1 DW 0
      17 000A  0000			i2 DW 0
      18 000C  0000			answer DW 0
      19				
      20 000E				DATA ENDS
      21				
      22				
      23				; Program code
      24 0000				CODE SEGMENT
      25				 ASSUME CS:CODE, DS:DATA, SS:AStack
      26				
      27 0000				Main PROC FAR
      28 0000  1E			    push DS
      29 0001  2B C0			    sub AX,AX
      30 0003  50			    push AX
      31 0004  B8 ---- R		    mov AX,DATA
      32 0007  8E D8			    mov DS,AX
      33				
      34 0009  8B 0E 0000 R		    mov cx, a
      35 000D  3B 0E 0002 R		    cmp cx, b 
      36 0011  7E 27			    jle secondcase ; a <= b
      37				
      38				    ; calculate i1
      39 0013  A1 0004 R		    mov ax, i 
      40 0016  8B 1E 0004 R		    mov bx, i
      41				    
      42 001A  B1 03			    mov cl, 03
      43 001C  D3 E0			    shl ax, cl ; ax = 8i
      44				
      45 001E  D1 E3			    shl bx, 1
      46 0020  2B C3			    sub ax, bx ; ax = 6i
      47				
      48 0022  C7 06 0008 R 0004	    mov i1, 4
      49 0028  29 06 0008 R		    sub i1, ax
      50				
      51				
      52				    ; calculate i2
      53 002C  A1 0004 R		    mov ax, i 
      54 002F  2D 0001			    sub ax, 1 
Microsoft (R) Macro Assembler Version 5.10                  10/18/21 20:17:1
                                                             Page     1-2


      55 0032  D1 E0			    shl ax, 1  
      56 0034  A3 000A R		    mov i2, ax
      57				    
      58 0037  EB 21 90			    jmp absi1
      59				
      60 003A				    secondcase: ; a <= b
      61 003A  8B 1E 0004 R		        mov bx, i
      62 003E  8B C3			        mov ax, bx
      63 0040  B1 02			        mov cl, 02
      64 0042  D3 E3			        shl bx, cl
      65 0044  2B D8			        sub bx, ax ; bx = 3i
      66				
      67				        ; calculate i1
      68 0046  C7 06 0008 R 0006	    	mov i1, 6
      69 004C  01 1E 0008 R		        add i1, bx
      70				
      71				        ; calculate i2
      72 0050  C7 06 000A R 0002	        mov i2, 2
      73 0056  29 1E 000A R		        sub i2, bx
      74				
      75 005A				    absi1:
      76 005A  83 3E 0008 R 00		        cmp i1, 0
      77 005F  7C 03			        jl changesigni1
      78 0061  EB 05 90			        jmp absi2    
      79				
      80 0064				    changesigni1:
      81 0064  F7 1E 0008 R		        neg i1
      82				
      83 0068				    absi2:
      84 0068  83 3E 000A R 00		        cmp i2, 0
      85 006D  7C 03			        jl changesigni2
      86 006F  EB 05 90			        jmp f3
      87				
      88 0072				    changesigni2:
      89 0072  F7 1E 000A R		        neg i2
      90				
      91 0076				    f3:
      92 0076  A1 0006 R		        mov ax, k
      93 0079  3D 0000			        cmp ax, 0
      94 007C  7C 1A			        jl negative ; k < 0
      95				
      96 007E				    kge0:        
      97 007E  A1 000A R		        mov ax, i2
      98 0081  2D 0003			        sub ax, 3
      99 0084  3D 0004			        cmp ax, 4
     100 0087  7E 06			        jle write4 
     101 0089  A3 000C R		        mov answer, ax
     102 008C  EB 14 90			        jmp exit
     103				
     104 008F				    write4:
     105 008F  C7 06 000C R 0004	        mov answer, 4
     106 0095  EB 0B 90			        jmp exit
     107				
     108 0098				    negative:
Microsoft (R) Macro Assembler Version 5.10                  10/18/21 20:17:1
                                                             Page     1-3


     109 0098  A1 0008 R		        mov ax, i1
     110 009B  2B 06 000A R		        sub ax, i2
     111 009F  A3 000C R		        mov answer, ax
     112				
     113 00A2				    exit:
     114 00A2  CB			        ret 
     115 00A3				Main ENDP
     116 00A3				CODE ENDS
     117				 END Main
Microsoft (R) Macro Assembler Version 5.10                  10/18/21 20:17:1
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0018	PARA	STACK	
CODE . . . . . . . . . . . . . .  	00A3	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000E	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

A  . . . . . . . . . . . . . . .  	L WORD	0000	DATA
ABSI1  . . . . . . . . . . . . .  	L NEAR	005A	CODE
ABSI2  . . . . . . . . . . . . .  	L NEAR	0068	CODE
ANSWER . . . . . . . . . . . . .  	L WORD	000C	DATA

B  . . . . . . . . . . . . . . .  	L WORD	0002	DATA

CHANGESIGNI1 . . . . . . . . . .  	L NEAR	0064	CODE
CHANGESIGNI2 . . . . . . . . . .  	L NEAR	0072	CODE

EXIT . . . . . . . . . . . . . .  	L NEAR	00A2	CODE

F3 . . . . . . . . . . . . . . .  	L NEAR	0076	CODE

I  . . . . . . . . . . . . . . .  	L WORD	0004	DATA
I1 . . . . . . . . . . . . . . .  	L WORD	0008	DATA
I2 . . . . . . . . . . . . . . .  	L WORD	000A	DATA

K  . . . . . . . . . . . . . . .  	L WORD	0006	DATA
KGE0 . . . . . . . . . . . . . .  	L NEAR	007E	CODE

MAIN . . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 00A3

NEGATIVE . . . . . . . . . . . .  	L NEAR	0098	CODE

SECONDCASE . . . . . . . . . . .  	L NEAR	003A	CODE

WRITE4 . . . . . . . . . . . . .  	L NEAR	008F	CODE

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  main		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  10/18/21 20:17:1

                                                             Symbols-2






    114 Source  Lines
    114 Total   Lines
     26 Symbols

  47512 + 461795 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
