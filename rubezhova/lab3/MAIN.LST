Microsoft (R) Macro Assembler Version 5.10                  11/4/21 09:26:59
                                                             Page     1-1


				ASSUME CS:CODE, DS:DATA, SS:AStack
				
 0000				AStack    SEGMENT  STACK
 0000  000C[			          DW 12 DUP('?')  
	   003F			
			 ]	
				
 0018				AStack    ENDS
				
 0000				DATA      SEGMENT
 0000  0008				  var_a     DW 8
 0002  0005				  var_b     DW 5
 0004  0001				  var_i     DW 1
 0006  0000				  var_k     DW 0
 0008  0000				  var_i1     DW 0
 000A  0000				  var_i2     DW 0
 000C  0000				  var_res     DW 0
 000E				DATA      ENDS
				
 0000				CODE      SEGMENT
				
 0000				Main      PROC  FAR
 0000  1E			          push  DS       
 0001  2B C0			          sub   AX,AX    
 0003  50			          push  AX
 0004  B8 ---- R		          mov AX,DATA
 0007  8E D8			          mov DS,AX       
				          
 0009  A1 0004 R		          mov ax, var_i ;ax=i (need for case1 a
				nd case2)
 000C  D1 E0			          shl ax,1	; ax=2i (need for case1
				 and case2)
 000E  8B 1E 0000 R		          mov bx,var_a
 0012  3B 1E 0002 R		          cmp bx, var_b
 0016  7F 18			          jg case1 	; jmp if a>b
 0018				case2:	  
 0018  03 06 0004 R			  add ax, var_i ; ax=3i
 001C  BB 000C				  mov bx,12	; bx=12
 001F  2B D8				  sub bx,ax
 0021  89 1E 000A R			  mov var_i2,bx ; i2=12-3i
 0025  D1 E0				  shl ax,1	; ax=6i
 0027  2D 000A				  sub ax, 10 
 002A  A3 0008 R			  mov var_i1,ax ; i1=6i-10
 002D  EB 1C 90				  jmp f3    
 0030				case1:    
 0030  D1 E0				  shl ax,1	; ax=4i
 0032  8B D8				  mov bx,ax	; bx=4i
 0034  05 0003				  add ax,3h	; ax=4i+3
 0037  F7 D8				  neg ax
 0039  A3 0008 R			  mov var_i1,ax ; i1=-(4i+3)
 003C  A1 0004 R			  mov ax,var_i
 003F  D1 E0				  shl ax,1	; ax=2i
 0041  03 C3				  add ax,bx	; ax=6i
 0043  05 0008				  add ax,8h	; ax=6i+8
Microsoft (R) Macro Assembler Version 5.10                  11/4/21 09:26:59
                                                             Page     1-2


 0046  F7 D8				  neg ax	
 0048  A3 000A R			  mov var_i2,ax ; i2=-(6i+8)  
 004B				f3:	  
 004B  83 3E 0006 R 00			  cmp var_k,0h
 0050  74 0F				  je abs_sum	; if k==0 then jmp
 0052  A1 0008 R			  mov ax, var_i1 ; ax=i1
 0055  3B 06 000A R			  cmp ax, var_i2
 0059  7E 1A				  jng set_min_i1 ; if i1<=i2 then jmp
 005B  A1 000A R			  mov ax, var_i2
 005E  EB 18 90				  jmp set_res  
 0061				abs_sum: 
 0061  A1 0008 R			 mov ax, var_i1 ; ax=i1
 0064  03 06 000A R			 add ax, var_i2 ; ax=i1+i2
 0068  3D 0000				 cmp ax,0h
 006B  7C 03				 jl neg_sum
 006D  EB 09 90				 jmp set_res	 
 0070				neg_sum: 
 0070  F7 D8				 neg ax
 0072  EB 04 90				 jmp set_res	 	 
 0075				set_min_i1: 
 0075  A1 0008 R			 mov ax, var_i1
 0078				set_res: 
 0078  A3 000C R			 mov var_res, ax   
 007B  CB			         ret                       
 007C				Main      ENDP
 007C				CODE      ENDS
				          END Main
Microsoft (R) Macro Assembler Version 5.10                  11/4/21 09:26:59
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0018	PARA	STACK	
CODE . . . . . . . . . . . . . .  	007C	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000E	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

ABS_SUM  . . . . . . . . . . . .  	L NEAR	0061	CODE

CASE1  . . . . . . . . . . . . .  	L NEAR	0030	CODE
CASE2  . . . . . . . . . . . . .  	L NEAR	0018	CODE

F3 . . . . . . . . . . . . . . .  	L NEAR	004B	CODE

MAIN . . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 007C

NEG_SUM  . . . . . . . . . . . .  	L NEAR	0070	CODE

SET_MIN_I1 . . . . . . . . . . .  	L NEAR	0075	CODE
SET_RES  . . . . . . . . . . . .  	L NEAR	0078	CODE

VAR_A  . . . . . . . . . . . . .  	L WORD	0000	DATA
VAR_B  . . . . . . . . . . . . .  	L WORD	0002	DATA
VAR_I  . . . . . . . . . . . . .  	L WORD	0004	DATA
VAR_I1 . . . . . . . . . . . . .  	L WORD	0008	DATA
VAR_I2 . . . . . . . . . . . . .  	L WORD	000A	DATA
VAR_K  . . . . . . . . . . . . .  	L WORD	0006	DATA
VAR_RES  . . . . . . . . . . . .  	L WORD	000C	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  main		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     76 Source  Lines
     76 Total   Lines
     23 Symbols

  48040 + 459220 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
