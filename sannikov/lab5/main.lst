Microsoft (R) Macro Assembler Version 5.10                  12/9/21 12:30:50
                                                             Page     1-1


 0000				AStack  SEGMENT STACK
 0000  0400[			    DB 1024 DUP(?)
	   ??			
			 ]	
				
 0400				AStack  ENDS
				
 0000				DATA    SEGMENT
 0000  0000			    KEEP_CS DW 0    ; –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —
				Å–µ–≥–º–µ–Ω—Ç–∞ –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω
				–∏—è
 0002  0000			    KEEP_IP DW 0    ; –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è –
				≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0004				DATA    ENDS
				
 0000				CODE    SEGMENT
				    ASSUME CS:CODE, DS:DATA, SS:AStack
				
 0000				WriteMsg  PROC  NEAR
 0000  B4 09			          mov AH, 9
 0002  CD 21			          int 21h 
 0004  C3			          ret
 0005				WriteMsg  ENDP
				
 0005				FUNC PROC FAR
 0005  EB 72 90				jmp process
 0008  0000				KEEP_SS DW 0
 000A  0000				KEEP_SP DW 0
 000C  59 45 53 21 0D 0A		MESSAGE DB 'YES!', 0dh, 0ah, '$'
       24			
 0013  50 72 6F 67 72 61		FINALLY DB 'Program Finished!', 0dh, 0a
				h, '$'
       6D 20 46 69 6E 69	
       73 68 65 64 21 0D	
       0A 24			
 0027  0006				COUNTER DW 6
 0029  0028[				func_stack DW 40 DUP (?)
	   ????			
			 ]	
				
 0079					process:
 0079  2E: 8C 16 0008 R				mov KEEP_SS, SS
 007E  2E: 89 26 000A R		    	mov KEEP_SP, SP
 0083  B8 ---- R		    	mov ax, SEG func_stack
 0086  8E D0			    	mov ss, ax
 0088  BC 0079 R		    	mov sp, OFFSET process
 008B  50					push ax
 008C  53					push bx
 008D  51					push cx
 008E  52					push dx
 008F  1E					push ds
 0090  B8 ---- R				mov ax, SEG func_stack
 0093  8E D8					mov ds, ax
 0095  BA 000C R				mov dx, OFFSET MESSAGE
Microsoft (R) Macro Assembler Version 5.10                  12/9/21 12:30:50
                                                             Page     1-2


 0098						start:
 0098  E8 0000 R					call WriteMsg
 009B  2E: 83 2E 0027 R 01				sub COUNTER, 1
 00A1  2E: 83 3E 0027 R 00				cmp COUNTER, 0
 00A7  75 EF						jnz start
 00A9  2E: C7 06 0027 R 0006			mov COUNTER, 6
 00B0  B8 ---- R				mov ax, DATA
 00B3  8B D0					mov dx, ax
 00B5  B9 0033					mov cx, 0033h 
 00B8  BA 00FF					mov dx, 00FFh
 00BB  B4 86					mov ah, 86h
 00BD  CD 15					int 15h
 00BF  BA 0013 R				mov dx, OFFSET FINALLY
 00C2  E8 0000 R				call WriteMsg
 00C5  58					pop ax
 00C6  5B				   	pop bx
 00C7  59				   	pop cx
 00C8  5A				   	pop dx
 00C9  1F				   	pop ds
 00CA  2E: 8E 16 0008 R			   	mov ss, KEEP_SS
 00CF  2E: 8B 26 000A R			   	mov sp, KEEP_SP
 00D4  B0 20				   	mov al, 20h
 00D6  E6 20				   	out 20h, al
 00D8  CF					iret
 00D9				FUNC ENDP
				
 00D9				MAIN PROC FAR
 00D9  1E			    push ds
 00DA  B8 ---- R		    mov ax, DATA
 00DD  8E D8			    mov ds, ax
				    
 00DF  B4 35			    mov ah, 35h ; —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω
				–∏—è –≤–µ–∫—Ç–æ—Ä–∞
 00E1  B0 23			    mov al, 23h ; –Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 00E3  CD 21			    int 21h
 00E5  89 1E 0002 R		    mov KEEP_IP, bx ; –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å
				–º–µ—â–µ–Ω–∏—è
 00E9  8C 06 0000 R		    mov KEEP_CS, es ; –∏ —Å–µ–≥–º–µ–Ω—Ç–∞ –≤–µ–
				∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
				    
 00ED  1E			    push ds
 00EE  BA 0005 R		    mov dx, OFFSET FUNC ; —Å–º–µ—â–µ–Ω–∏–µ –¥–ª
				—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ DX
 00F1  B8 ---- R		    mov ax, SEG FUNC ; —Å–µ–≥–º–µ–Ω—Ç –ø—Ä–æ—Ü–
				µ–¥—É—Ä—ã
 00F4  8E D8			    mov ds, ax ; –ø–æ–º–µ—â–∞–µ–º –≤ DS
 00F6  B4 25			    mov ah, 25h ; —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤
				–∫–∏ –≤–µ–∫—Ç–æ—Ä–∞
 00F8  B0 23			    mov al, 23h ; –Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 00FA  CD 21			    int 21h ; –º–µ–Ω—è–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ
 00FC  1F			    pop ds
				    
 00FD				    begin:
 00FD  B4 00			    	mov ah, 0
Microsoft (R) Macro Assembler Version 5.10                  12/9/21 12:30:50
                                                             Page     1-3


 00FF  CD 16					int 16h
 0101  3C 71					cmp al, 'q'
 0103  74 08					je quit
 0105  3C 03					cmp al, 3
 0107  75 F4					jnz begin
 0109  CD 23					int 23h
 010B  EB F0					jmp begin
 010D					quit:
 010D  FA			    	cli
 010E  1E			    	push ds
 010F  8B 16 0002 R		    	mov dx, KEEP_IP
 0113  A1 0000 R		    	mov ax, KEEP_CS
 0116  8E D8			    	mov ds, ax
 0118  B4 25			    	mov ah, 25h
 011A  B0 23			    	mov al, 23h
 011C  CD 21			    	int 21h ; –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–
				º —Å—Ç–∞—Ä—ã–π –≤–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—
				è
 011E  1F			    	pop ds
 011F  FB			    	sti
 0120  B4 4C			   		mov ah, 4ch
 0122  CD 21					int 21h    
 0124				MAIN ENDP
 0124				CODE ENDS
				     END MAIN
Microsoft (R) Macro Assembler Version 5.10                  12/9/21 12:30:50
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0400	PARA	STACK	
CODE . . . . . . . . . . . . . .  	0124	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0004	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BEGIN  . . . . . . . . . . . . .  	L NEAR	00FD	CODE

COUNTER  . . . . . . . . . . . .  	L WORD	0027	CODE

FINALLY  . . . . . . . . . . . .  	L BYTE	0013	CODE
FUNC . . . . . . . . . . . . . .  	F PROC	0005	CODE	Length = 00D4
FUNC_STACK . . . . . . . . . . .  	L WORD	0029	CODE	Length = 0028

KEEP_CS  . . . . . . . . . . . .  	L WORD	0000	DATA
KEEP_IP  . . . . . . . . . . . .  	L WORD	0002	DATA
KEEP_SP  . . . . . . . . . . . .  	L WORD	000A	CODE
KEEP_SS  . . . . . . . . . . . .  	L WORD	0008	CODE

MAIN . . . . . . . . . . . . . .  	F PROC	00D9	CODE	Length = 004B
MESSAGE  . . . . . . . . . . . .  	L BYTE	000C	CODE

PROCESS  . . . . . . . . . . . .  	L NEAR	0079	CODE

QUIT . . . . . . . . . . . . . .  	L NEAR	010D	CODE

START  . . . . . . . . . . . . .  	L NEAR	0098	CODE

WRITEMSG . . . . . . . . . . . .  	N PROC	0000	CODE	Length = 0005

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  main		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    111 Source  Lines
    111 Total   Lines
     23 Symbols

  48000 + 459257 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
