Microsoft (R) Macro Assembler Version 5.10                  12/2/21 06:14:00
                                                             Page     1-1


 = 0001				siz equ 1 ; –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—
				Ç—Ä–æ–∫–µ –¥–ª—è –≤–≤–æ–¥–∞
				
 0000				AStack SEGMENT STACK
 0000  000C[			 DW 12 DUP(?)
	   ????			
			 ]	
				
 0018				AStack ENDS
				
 0000				DATA SEGMENT
 0000  0000			 KEEP_CS DW 0 ; –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ–≥–
				º–µ–Ω—Ç–∞
 0002  0000			 KEEP_IP DW 0 ; –∏ —Å–º–µ—â–µ–Ω–∏—è –ø—Ä–µ—Ä—ã–
				≤–∞–Ω–∏—è
 0004  0D 0A			 message DB 0Dh, 0Ah,siz dup("$"), '$' ; —Å—Ç—Ä
				–æ–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞
       0001[			
	   24			
			 ]	
       24			
 0008  0D 0A 45 6E 64 21	 message2 DB 0Dh, 0Ah,'End!', '$' ; —Å—Ç—Ä–æ–∫–
				∞ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
       24			
 000F				DATA ENDS
				
 0000				CODE SEGMENT
				 ASSUME CS:CODE, DS:DATA, SS:AStack
				
 0000				InOut PROC FAR
 0000  50				push AX ; —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ
				–Ω—è–µ–º—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
 0001  51				push CX
 0002  52				push DX
				
 0003  B8 0001				mov ax, siz
 0006  8B C8				mov cx, ax ; –ø–æ–º–µ—â–∞–µ–º —á–∏—Å–ª–
				æ –≤–≤–æ–¥–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Ü–∏–∫–ª
				–∞
 0008  BF 0004 R			mov di, offset message ; –ø–æ–ª—É—á–∞–µ
				–º —Å–º–µ—â–µ–Ω–∏–µ –Ω–∞ –Ω–∞—á–∞–ª–æ –Ω–∞—à–µ–
				≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞
 000B  83 C7 02				add di, 2 ; —Å–º–µ—â–∞–µ–º—Å—è –Ω–∞ 2 –
				∏–∑-–∑–∞ –¥–≤—É—Ö –ø–µ—Ä–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
				, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞—é—Ç –∫—Ä–∞—Å–∏–≤–æ
 000E				lp:	
 000E  B4 01				mov ah, 01h ; —Ñ—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞
				 —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (—Å–∏–º–≤–æ–ª => al)
 0010  CD 21				int 21h ; –≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–µ—Ä—ã–≤
				–∞–Ω–∏–µ
 0012  88 05				mov [di], al ; –ø–æ–º–µ—â–∞–µ–º —Å–∏–º–
				≤–æ–ª –≤ —Å—Ç—Ä–æ–∫—É
 0014  47				inc di ; —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–º–µ—
				â–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Å–∏–º–≤–æ–ª,
Microsoft (R) Macro Assembler Version 5.10                  12/2/21 06:14:00
                                                             Page     1-2


				 –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫ –∑–∞–ø–∏—Å–∏
 0015  E2 F7				loop lp ; –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ—Ü–µ
				—Å—Å, –ø–æ–∫–∞ –Ω–µ –≤–≤–µ–¥—É—Ç –Ω—É–∂–Ω–æ–µ —
				á–∏—Å–ª–æ —Å–∏–º–≤–æ–ª–æ–≤
					
 0017  B4 09				mov ah, 09h ; —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥
				–∞ —Å—Ç—Ä–æ–∫–∏
 0019  BA 0004 R			mov dx, offset message ; —É–∫–∞–∑—ã–≤–∞
				–µ–º —Å–º–µ—â–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
 001C  CD 21				int 21h ; –≤—ã–≤–µ–ª–∏
 001E  BA 0008 R			mov dx, offset message2
 0021  CD 21				int 21h ; –≤—ã–≤–µ–ª–∏
				
 0023  5A				pop DX ; —Å—á–∞—Å—Ç–ª–∏–≤—ã–µ –≤–æ—Å—Å—
				Ç–∞–Ω–æ–≤–ª–µ–≤–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä—ã
 0024  59				pop CX  
 0025  58			        pop AX
 0026  B0 20			        mov AL, 20h ; –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏
				—è –æ–±—Ä–∞–±–æ–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π
 0028  E6 20			        out 20h,AL ; —Å –±–æ–ª–µ–µ –Ω–∏–∑–∫–∏–º
				–∏ —É—Ä–æ–≤–Ω—è–º–∏, —á–µ–º —Ç–æ–ª—å–∫–æ —á—Ç–æ
				 –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
 002A  CF			        iret
 002B				InOut ENDP
				
				
 002B				Main PROC FAR
 002B  1E				push DS
 002C  2B C0				sub AX,AX
 002E  50				push AX
 002F  B8 ---- R			mov AX, DATA
 0032  8E D8				mov DS, AX
				
 0034  B4 35				mov AH,35h ; –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ç–
				µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–∞ –
				ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0036  B0 60				mov AL,60h ; –Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 0038  CD 21				int 21h
 003A  89 1E 0002 R			mov KEEP_IP, BX ; –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–
				µ —Å–º–µ—â–µ–Ω–∏—è
 003E  8C 06 0000 R			mov KEEP_CS, ES ; –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–
				µ —Å–µ–≥–º–µ–Ω—Ç–∞
				
 0042  1E				push DS
 0043  BA 0000 R			mov DX, offset InOut ; —Å–º–µ—â–µ–Ω–∏–µ
				 –¥–ª—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
 0046  B8 ---- R			mov AX, seg InOut ; —Å–µ–≥–º–µ–Ω—Ç –ø—Ä
				–æ—Ü–µ–¥—É—Ä—ã
 0049  8E D8				mov DS, AX
 004B  B4 25				mov AH, 25h ; —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω
				–æ–≤–∫–∏ –≤–µ–∫—Ç–æ—Ä–∞
 004D  B0 60				mov AL, 60h ; –Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 004F  CD 21				int 21h ; —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤
				–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞
Microsoft (R) Macro Assembler Version 5.10                  12/2/21 06:14:00
                                                             Page     1-3


				–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç
				—á–∏–∫–∞
 0051  1F				pop DS
				
 0052  CD 60				int 60h ; –≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–µ—Ä—ã–≤
				–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					
 0054  FA				CLI
 0055  1E				push DS
 0056  8B 16 0002 R			mov DX, KEEP_IP
 005A  A1 0000 R			mov AX, KEEP_CS
 005D  8E D8				mov DS, AX
 005F  B4 25				mov AH, 25h
 0061  B0 60				mov AL, 60h
 0063  CD 21				int 21h
 0065  1F				pop DS
 0066  FB				STI 
				
 0067  CB				ret
 0068				Main ENDP
 0068				CODE ENDS	
					END Main
Microsoft (R) Macro Assembler Version 5.10                  12/2/21 06:14:00
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0018	PARA	STACK	
CODE . . . . . . . . . . . . . .  	0068	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000F	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

INOUT  . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 002B

KEEP_CS  . . . . . . . . . . . .  	L WORD	0000	DATA
KEEP_IP  . . . . . . . . . . . .  	L WORD	0002	DATA

LP . . . . . . . . . . . . . . .  	L NEAR	000E	CODE

MAIN . . . . . . . . . . . . . .  	F PROC	002B	CODE	Length = 003D
MESSAGE  . . . . . . . . . . . .  	L BYTE	0004	DATA
MESSAGE2 . . . . . . . . . . . .  	L BYTE	0008	DATA

SIZ  . . . . . . . . . . . . . .  	NUMBER	0001	

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  lb5		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     86 Source  Lines
     86 Total   Lines
     16 Symbols

  48030 + 459230 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
