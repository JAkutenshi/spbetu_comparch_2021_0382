Microsoft (R) Macro Assembler Version 5.10                  12/16/21 01:57:0
                                                             Page     1-1


 0000				AStack  SEGMENT STACK
 0000  0400[			    DB 1024 DUP(?)
	   ??			
			 ]	
				
 0400				AStack  ENDS
				
 0000				DATA    SEGMENT
 0000  0000			    KEEP_CS DW 0    ;–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å
				–µ–≥–º–µ–Ω—Ç–∞ –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–
				∏—è
 0002  0000			    KEEP_IP DW 0    ;–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å
				–º–µ—â–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–
				∏—è
 0004				DATA    ENDS
				
 0000				CODE    SEGMENT
				    ASSUME CS:CODE, DS:DATA, SS:AStack
				.186
 0000				SUBR_INT PROC FAR
				
 0000  E9 0809 R		    jmp H_start
				
 0003  0000			    SAVE_SS DW 0
 0005  0000			    SAVE_SP DW 0
 0007  0000			    SAVE_AX DW 0
 0009  0400[			    MY_STACK DW 1024 DUP(?)
	   ????			
			 ]	
				
				    
 0809				    H_start:
 0809  2E: 89 26 0005 R		    mov SAVE_SP, sp
 080E  2E: A3 0007 R		    mov SAVE_AX, ax
 0812  2E: 8C 16 0003 R		    mov SAVE_SS, ss
 0817  BC 0809 R		    mov sp, OFFSET H_start
 081A  B8 ---- R		    mov ax, SEG MY_STACK
 081D  8E D0			    mov ss, ax
 081F  2E: A1 0007 R		    mov ax, SAVE_AX
				    ;—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ–º—ã—Ö 
				—Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
 0823  50				push ax 
 0824  1E			    push ds
				
 0825  B8 ---- R		    mov ax, SEG SUBR_INT
 0828  8E D8			    mov ds, ax
 082A  2E: A1 0007 R		    mov ax, SAVE_AX
 082E  B4 29				mov ah,29h ;–∑–∞–Ω–æ—Å–∏–º —Ñ—É–Ω–∫—Ü–∏
				—é –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ 
				    
 0830  B0 0B				mov al,0Bh               ; CMOS OBh - —
				É–ø—Ä–∞–≤–ª—è—é—â–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –í
 0832  E6 70			    out 70h,al               ; –ø–æ—Ä—Ç 70h - –
				∏–Ω–¥–µ–∫—Å CMOS
Microsoft (R) Macro Assembler Version 5.10                  12/16/21 01:57:0
                                                             Page     1-2


 0834  E4 71			    in al,71h               ; –ø–æ—Ä—Ç 71h - –¥
				–∞–Ω–Ω—ã–µ CMOS
 0836  24 FB			    and al,11111011b         ; –æ–±–Ω—É–ª–∏—Ç—å
				 –±–∏—Ç 2 (—Ñ–æ—Ä–º–∞ —á–∏—Å–µ–ª - BCD)
 0838  E6 71			    out 71h,al               ; –∏ –∑–∞–ø–∏—Å–∞—
				Ç—å –æ–±—Ä–∞—Ç–Ω–æ
 083A  B0 04				mov al,4               ; CMOS 04h - —á–
				∞—Å
 083C  E8 086B R		    call Print_cmos	
 083F  B0 3A			    mov al,':'               ;–¥–≤–æ–µ—Ç–æ—á–∏–
				µ
 0841  CD 29			    int 29h
 0843  B0 02			    mov al,2                 ;CMOS 02h - –º–∏–Ω
				—É—Ç–∞
 0845  E8 086B R		    call Print_cmos
 0848  B0 3A			    mov al,':'               ;–¥–≤–æ–µ—Ç–æ—á–∏–
				µ
 084A  CD 29			    int 29h
 084C  B0 00			    mov al,0                ;CMOS 00h - —Å–µ–∫—
				É–Ω–¥–∞
 084E  E8 086B R		    call Print_cmos
 0851  B0 20				mov al,' '               ;–ø—Ä–æ–±–µ–ª
 0853  CD 29			    int 29h
					
					;–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏—
				Å—Ç—Ä–æ–≤
 0855  1F			    pop ds
 0856  58				pop ax 
				    
 0857  2E: 8B 26 0005 R		    mov sp, SAVE_SP
 085C  2E: A1 0003 R		    mov ax, SAVE_SS
 0860  8E D0			    mov ss, ax
 0862  2E: A1 0007 R		    mov ax, SAVE_AX
 0866  B0 20				mov al,20h  ;—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –æ–±—
				Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π 
 0868  E6 20				out 20h,al  ;—Å –±–æ–ª–µ–µ –Ω–∏–∑–∫–∏–º
				–∏ —É—Ä–æ–≤–Ω—è–º–∏
 086A  CF				iret ;–≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–µ—Ä—ã–≤–∞–Ω–
				∏—è
 086B				SUBR_INT ENDP
				
 086B				Print_cmos proc near
 086B  E6 70			    out 70h,al               ; –ø–æ—Å–ª–∞—Ç—å A
				L –≤ –∏–Ω–¥–µ–∫—Å–Ω—ã–π –ø–æ—Ä—Ç CMOS
 086D  E4 71			    in al,71h               ; –ø—Ä–æ—á–∏—Ç–∞—Ç—
				å –¥–∞–Ω–Ω—ã–µ
 086F  50			    push ax
 0870  C0 E8 04			    shr al,4               ; –≤—ã–¥–µ–ª–∏—Ç—å —
				Å—Ç–∞—Ä—à–∏–µ —á–µ—Ç—ã—Ä–µ –±–∏—Ç–∞
 0873  04 30			    add al,'0'               ; –¥–æ–±–∞–≤–∏—Ç—å
				 ASCII-–∫–æ–¥ —Ü–∏—Ñ—Ä—ã 0
 0875  CD 29			    int 29h                  ; –≤—ã–≤–µ—Å—Ç–∏ –
				Ω–∞ —ç–∫—Ä–∞–Ω
 0877  58			    pop ax
Microsoft (R) Macro Assembler Version 5.10                  12/16/21 01:57:0
                                                             Page     1-3


 0878  24 0F			    and al,0Fh               ; –≤—ã–¥–µ–ª–∏—Ç—å
				 –º–ª–∞–¥—à–∏–µ —á–µ—Ç—ã—Ä–µ –±–∏—Ç–∞
 087A  04 30			    add al,30h               ; –¥–æ–±–∞–≤–∏—Ç—å
				 ASCII-–∫–æ–¥ —Ü–∏—Ñ—Ä—ã 0
 087C  CD 29			    int 29h                  ; –≤—ã–≤–µ—Å—Ç–∏ –
				Ω–∞ —ç–∫—Ä–∞–Ω
 087E  C3			    ret
 087F				Print_cmos endp
				
 087F				MAIN PROC FAR
				
 087F  B8 ---- R		    mov ax, DATA
 0882  8E D8			    mov ds, ax
				    ;—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—ã
				–≤–∞–Ω–∏—è
 0884  B4 35			    mov ah, 35h     ;—Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–
				µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–∞
 0886  B0 08			    mov al, 08h     ;–Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 0888  CD 21			    int 21h
 088A  8C 06 0000 R		    mov KEEP_CS, es
 088E  89 1E 0002 R		    mov KEEP_IP, bx
				
					;—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π 
				–≤–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0892  1E			    push ds
 0893  BA 0000 R		    mov dx, OFFSET SUBR_INT
 0896  B8 ---- R		    mov ax, SEG SUBR_INT
 0899  8E D8			    mov ds, ax
 089B  B4 25			    mov ah, 25h ;—Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–
				∫–∏ –≤–µ–∫—Ç–æ—Ä–∞
 089D  B0 08			    mov al, 08h ;–Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 089F  CD 21			    int 21h
 08A1  1F			    pop ds
					
 08A2  CD 08				int 8h
 08A4				    Restoring_the_vector:  ;–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–
				ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –≤–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—
				ã–≤–∞–Ω–∏—è
 08A4  FA			    cli
 08A5  1E			    push ds
 08A6  8B 16 0002 R		    mov dx, KEEP_IP
 08AA  A1 0000 R		    mov ax, KEEP_CS
 08AD  8E D8			    mov ds, ax
 08AF  B4 25			    mov ah, 25h ;—Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–
				∫–∏ –≤–µ–∫—Ç–æ—Ä–∞
 08B1  B0 08			    mov al, 08h ;–Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 08B3  CD 21			    int 21h
 08B5  1F			    pop ds
 08B6  FB			    sti
				
 08B7  B4 4C			    mov ah, 4ch ;–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—
				Ä–∞–º–º—ã
 08B9  CD 21			    int 21h
				
Microsoft (R) Macro Assembler Version 5.10                  12/16/21 01:57:0
                                                             Page     1-4


 08BB				MAIN ENDP
 08BB				CODE ENDS
				END MAIN
Microsoft (R) Macro Assembler Version 5.10                  12/16/21 01:57:0
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

ASTACK . . . . . . . . . . . . .  	0400	PARA	STACK	
CODE . . . . . . . . . . . . . .  	08BB	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0004	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

H_START  . . . . . . . . . . . .  	L NEAR	0809	CODE

KEEP_CS  . . . . . . . . . . . .  	L WORD	0000	DATA
KEEP_IP  . . . . . . . . . . . .  	L WORD	0002	DATA

MAIN . . . . . . . . . . . . . .  	F PROC	087F	CODE	Length = 003C
MY_STACK . . . . . . . . . . . .  	L WORD	0009	CODE	Length = 0400

PRINT_CMOS . . . . . . . . . . .  	N PROC	086B	CODE	Length = 0014

RESTORING_THE_VECTOR . . . . . .  	L NEAR	08A4	CODE

SAVE_AX  . . . . . . . . . . . .  	L WORD	0007	CODE
SAVE_SP  . . . . . . . . . . . .  	L WORD	0005	CODE
SAVE_SS  . . . . . . . . . . . .  	L WORD	0003	CODE
SUBR_INT . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 086B

@CPU . . . . . . . . . . . . . .  	TEXT  259		
@FILENAME  . . . . . . . . . . .  	TEXT  lab5		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    123 Source  Lines
    123 Total   Lines
     19 Symbols

  48018 + 457192 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
